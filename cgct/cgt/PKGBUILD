pkgname=cgt
pkgver=14.1.0
pkgrel=2
pkgdesc='Cross GCCs for Termux (only for Linux)'
arch=(x86_64)
url='https://gcc.gnu.org/'
license=(GPL LGPL FDL)
source=(https://ftp.gnu.org/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.xz
	gcc-configure.patch
	config.sub.patch
	configure.patch
	set_dynamic_path.patch
	cgct-app-prefix.cc
	cgct-app-prefix.h)
sha256sums=('e283c654987afe3de9d8080bc0bd79534b5ca0d681a73a11ff2b5d3767426840'
            '89529c2ad7b8f25a1a1a7b4129b8a58d3b80e254026d85800bb20f60431a5a03'
            'fb1a2b9d2eb649153431e7bc81d4382c667338b9c461e4e4697d7db754041b68'
            'fc725f6e77dedc0e6cd3d55ef33e93f0b7c5b25b6d5cf1d42311357f6abf1047'
            '4d61bcbbfa41ac6093d8f3b7c1c4007456172a18a0fafb1743871baf7863469e'
            '732e15a76056348911f60825c377c0378f6dad57b29eb86fcc7447cf8172f171'
            '9fb91df134d096bf493844812617b5aed9ce5d6ccd564f8a3a11c8d9812be744')
depends=('cbt')
optdepends=('glibc-cgct')
groups=('cgct')

prepare() {
	for i in *.patch; do
		patch -Np1 -i ${srcdir}/$i
	done

	cp ./cgct-app-prefix.{cc,h} ./gcc-${pkgver}/gcc/

	cd gcc-${pkgver}
	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in
	sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
	sed -i '/lp64=/s/lib64/lib/' gcc/config/aarch64/t-aarch64-linux
}

build() {
	unset CFLAGS CXXFLAGS AR LD CC CXX
	CFLAGS="-O2 -pipe -fno-plt -fexceptions -Wp,-D_FORTIFY_SOURCE=2 -Wformat -fstack-clash-protection"
	CXXFLAGS="${CFLAGS} -Wp,-D_GLIBCXX_ASSERTIONS"

	clean_prefix || true

	for target in aarch64-linux-gnu arm-linux-gnueabihf x86_64-linux-gnu i686-linux-gnu; do
		arch_build=${target/-*}
		CGCT_PREFIX=${CGCT_PATH}/${arch_build}
		mkdir gcc-${arch_build} || true
		cd gcc-${arch_build}

		for pkg in glibc linux-api-headers-glibc libxcrypt-glibc; do
			install_gpkg ${arch_build} ${pkg}
		done

		FLAGS_FOR_TARGET="-I$GLIBC_PREFIX/include -L$GLIBC_PREFIX/lib -Wl,-rpath=$GLIBC_PREFIX/lib"
		CONFIGFLAG=""
		case "$arch_build" in
			"aarch64") CONFIGFLAG="--with-arch=armv8-a --enable-fix-cortex-a53-835769 --enable-fix-cortex-a53-843419";;
			"arm") CONFIGFLAG="--with-arch=armv7-a --with-float=hard --with-fpu=neon";;
			"x86_64") CONFIGFLAG="--with-arch=x86-64";;
			"i686") CONFIGFLAG="--with-arch=i686";;
		esac

		"$srcdir"/gcc-${pkgver}/configure \
			--host=cgct \
			--build=${CHOST} \
			--target=${target} \
			--prefix=${CGCT_PREFIX} \
			--with-local-prefix=${CGCT_PREFIX} \
			--libdir=${CGCT_PREFIX}/lib \
			--libexecdir=${CGCT_PREFIX}/lib \
			--includedir=${GLIBC_PREFIX}/include \
			--with-bugurl=https://github.com/termux-pacman/glibc-packages/issues \
			$CONFIGFLAG \
			--enable-languages=c,c++ \
			--enable-checking=release \
			--enable-threads=posix \
			--enable-lto \
			--disable-multilib \
			--disable-bootstrap \
			--disable-nls \
			--enable-clocale=gnu \
			--enable-default-pie \
			--enable-default-ssp \
			--with-system-zlib \
			--enable-__cxa_atexit \
			--enable-linker-build-id \
			--enable-plugin \
			--with-linker-hash-style=gnu \
			--enable-gnu-indirect-function \
			--enable-gnu-unique-object \
			--enable-shared \
			--disable-werror \
			--disable-libssp \
			--disable-libstdcxx-pch \
			--disable-libunwind-exceptions \
			CFLAGS_FOR_TARGET="$FLAGS_FOR_TARGET $CFLAGS" \
			CXXFLAGS_FOR_TARGET="$FLAGS_FOR_TARGET $CXXFLAGS" \
			LD_FOR_TARGET=${CGCT_PREFIX}/bin/ld \
			AS_FOR_TARGET=${CGCT_PREFIX}/bin/as \
			AR_FOR_TARGET=${CGCT_PREFIX}/bin/ar \
			RANLIB_FOR_TARGET=${CGCT_PREFIX}/bin/ranlib \
			NM_FOR_TARGET=${CGCT_PREFIX}/bin/nm \
			OBJCOPY_FOR_TARGET=${CGCT_PREFIX}/bin/objcopy \
			OBJDUMP_FOR_TARGET=${CGCT_PREFIX}/bin/objdump \
			CC=x86_64-linux-gnu-gcc \
			CXX=x86_64-linux-gnu-g++ \
			AR=ar \
			LD=ld \
			OBJCOPY=objcopy \
			OBJDUMP=objdump
		make

		clean_prefix

		cd ..
	done
}

package() {
	for target in aarch64-linux-gnu arm-linux-gnueabihf x86_64-linux-gnu i686-linux-gnu; do
		arch_build=${target/-*}
		CGCT_PREFIX=${CGCT_PATH}/${arch_build}
		cd gcc-${arch_build}

		for pkg in glibc linux-api-headers-glibc libxcrypt-glibc; do
			install_gpkg ${arch_build} ${pkg}
		done

		make DESTDIR="$pkgdir" install-gcc install-target-{libgcc,libstdc++-v3,libgomp,libquadmath,libatomic}

		if [ -d $pkgdir/${CGCT_PREFIX}/$target/lib ]; then
			mv $pkgdir/${CGCT_PREFIX}/$target/lib/* $pkgdir/${CGCT_PREFIX}/lib
		fi
		if [ -d $pkgdir/${CGCT_PREFIX}/$target/include ]; then
			mv $pkgdir/${CGCT_PREFIX}/$target/include/* $pkgdir/${CGCT_PREFIX}/include
		fi
		if [ -d $pkgdir/${CGCT_PREFIX}/include/$pkgver ]; then
			mkdir $pkgdir/${CGCT_PREFIX}/include/c++
			mv $pkgdir/${CGCT_PREFIX}/include/$pkgver $pkgdir/${CGCT_PREFIX}/include/c++
		fi
		for i in gcc g++; do
			ln -s ${target}-${i} $pkgdir/${CGCT_PREFIX}/bin/${i}
		done
		ln -s gcc $pkgdir/${CGCT_PREFIX}/bin/cc
		ln -s g++ $pkgdir/${CGCT_PREFIX}/bin/cpp
		rm -fr $pkgdir/${CGCT_PREFIX}/share
		rm -fr $pkgdir/${CGCT_PREFIX}/$target
		rm -fr $pkgdir/${DIR_TERMUX}/files

		clean_prefix

		cd ..
	done

	replace_hard_with_symbolic "$pkgdir"
}
